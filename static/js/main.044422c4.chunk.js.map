{"version":3,"sources":["components/Phonebook/Phonebook.module.css","components/Phonebook/ContactElement.js","components/Phonebook/ContactList.js","components/Phonebook/ContactForm.js","components/Phonebook/Filter.js","App.js","reportWebVitals.js","index.js"],"names":["module","exports","ContactElement","name","number","className","s","prototype","PropTypes","string","isRequired","checkPropTypes","ContactList","contacts","deleteContact","console","log","list","map","id","item","button","type","onClick","func","ContactForm","state","handleChange","e","currentTarget","setState","value","handleSubmit","preventDefault","props","find","contact","alert","addContact","this","onSubmit","lableContact","inputContact","onChange","pattern","title","required","Component","defaultProps","Filter","findLable","filter","App","uuidv4","prevState","changeFilter","getVisibleContact","normalizeTodo","toLowerCase","includes","todoId","visibleContact","container","phonebookContainer","contactsContainer","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.044422c4.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Phonebook_container__16PO1\",\"phonebookContainer\":\"Phonebook_phonebookContainer__GPtDU\",\"lableContact\":\"Phonebook_lableContact__3bNdh\",\"inputContact\":\"Phonebook_inputContact__3fRSI\",\"contactsContainer\":\"Phonebook_contactsContainer__27UP4\",\"list\":\"Phonebook_list__2ToeB\",\"item\":\"Phonebook_item__1RKjj\",\"number\":\"Phonebook_number__4kMEx\",\"button\":\"Phonebook_button__3DEbT\",\"findLable\":\"Phonebook_findLable__2l0GM\",\"find\":\"Phonebook_find__3EOzE\"};","import s from \"./Phonebook.module.css\";\nimport PropTypes from \"prop-types\";\n\nfunction ContactElement({ name, number }) {\n  return (\n    <p>\n      <span className={s.name}>{name}</span>:\n      <span className={s.number}>{number}</span>\n    </p>\n  );\n}\n\nContactElement.prototype = {\n  name: PropTypes.string.isRequired,\n  number: PropTypes.number.isRequired,\n};\n\nPropTypes.checkPropTypes(ContactElement);\n\nexport default ContactElement;\n","import ContactElement from \"./ContactElement\";\nimport s from \"./Phonebook.module.css\";\nimport PropTypes from \"prop-types\";\n\nfunction ContactList({ contacts, deleteContact }) {\n  console.log(contacts);\n  return (\n    <ul className={s.list}>\n      {contacts.map(({ id, name, number }) => (\n        <li key={id} className={s.item}>\n          <ContactElement name={name} number={number} />\n          <button\n            className={s.button}\n            type=\"button\"\n            onClick={() => deleteContact(id)}\n          >\n            Delete\n          </button>\n        </li>\n      ))}\n    </ul>\n  );\n}\n\nContactList.prototype = {\n  id: PropTypes.string.isRequired,\n  name: PropTypes.string.isRequired,\n  number: PropTypes.number.isRequired,\n\n  deleteContact: PropTypes.func.isRequired,\n};\n\nPropTypes.checkPropTypes(ContactList);\n\nexport default ContactList;\n","import { Component } from \"react\";\nimport s from \"./Phonebook.module.css\";\n// import PropTypes from \"prop-types\";\n\nclass ContactForm extends Component {\n  static defaultProps = {\n    name: \"\",\n    number: \"\",\n  };\n\n  state = {\n    name: \"\",\n    number: \"\",\n  };\n\n  handleChange = (e) => {\n    console.log(e.currentTarget.name);\n    if (e.currentTarget.name === \"name\") {\n      this.setState({\n        name: e.currentTarget.value,\n      });\n    }\n    if (e.currentTarget.name === \"number\") {\n      this.setState({\n        number: e.currentTarget.value,\n      });\n    }\n  };\n\n  handleSubmit = (e) => {\n    e.preventDefault();\n    const { name, number } = this.state;\n    console.log(this.props.contacts);\n\n    const isContactsIncludes = this.props.contacts.find(\n      (contact) => contact.name === name\n    );\n\n    if (isContactsIncludes) {\n      return alert(`${name}is alredy in contacts`);\n    } else {\n      this.props.addContact(name, number);\n\n      this.setState({ name: \"\", number: \"\" });\n    }\n  };\n\n  render() {\n    const { name, number } = this.state;\n    return (\n      <form onSubmit={this.handleSubmit}>\n        <label className={s.lableContact}>\n          Name\n          <input\n            className={s.inputContact}\n            type=\"text\"\n            name=\"name\"\n            value={name}\n            onChange={this.handleChange}\n            pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n            title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\n            required\n          />\n        </label>\n\n        <label className={s.lableContact}>\n          Number\n          <input\n            className={s.inputContact}\n            type=\"tel\"\n            name=\"number\"\n            value={number}\n            onChange={this.handleChange}\n            pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n            title=\"Номер телефона должен состоять цифр и может содержать пробелы, тире, круглые скобки и может начинаться с +\"\n            required\n          />\n        </label>\n\n        <button className={s.button} type=\"submit\">\n          Add contact\n        </button>\n      </form>\n    );\n  }\n}\n\n// ContactForm.prototype = {\n//   //   id: PropTypes.string.isRequired,\n//   name: PropTypes.string.isRequired,\n//   number: PropTypes.number.isRequired,\n//   addContact: PropTypes.func.isRequired,\n// };\n\n// PropTypes.checkPropTypes(ContactForm);\n\nexport default ContactForm;\n","// import React from \"react\";\nimport s from \"./Phonebook.module.css\";\nimport PropTypes from \"prop-types\";\n\nfunction Filter({ value, onChange }) {\n  return (\n    <label className={s.findLable}>\n      Find contacts by name\n      <input\n        className={s.find}\n        type=\"text\"\n        value={value}\n        onChange={onChange}\n      ></input>\n    </label>\n  );\n}\n\nFilter.prototype = {\n  filter: PropTypes.string.isRequired,\n  onChange: PropTypes.func.isRequired,\n};\n\nPropTypes.checkPropTypes(Filter);\n\nexport default Filter;\n","// import logo from \"./logo.svg\";\n// import \"./App.css\";\nimport { Component } from \"react\";\nimport { v4 as uuidv4 } from \"uuid\";\nimport contacts from \"./components/Phonebook/contacts.json\";\nimport ContactList from \"./components/Phonebook/ContactList\";\nimport ContactForm from \"./components/Phonebook/ContactForm\";\nimport Filter from \"./components/Phonebook/Filter\";\nimport s from \"./components/Phonebook/Phonebook.module.css\";\n\nclass App extends Component {\n  state = {\n    contacts: contacts,\n    filter: \"\",\n  };\n\n  addContact = (name, number) => {\n    const contact = {\n      id: uuidv4(),\n      name: name,\n      number: number,\n    };\n\n    this.setState((prevState) => ({\n      contacts: [contact, ...prevState.contacts],\n    }));\n  };\n\n  changeFilter = (e) => {\n    console.log(e.currentTarget.value);\n    this.setState({ filter: e.currentTarget.value });\n  };\n\n  getVisibleContact = () => {\n    const { filter, contacts } = this.state;\n    console.log(contacts);\n    const normalizeTodo = filter.toLowerCase();\n    return contacts.filter((contact) =>\n      contact.name.toLowerCase().includes(normalizeTodo)\n    );\n  };\n\n  deleteContact = (todoId) => {\n    this.setState((prevState) => ({\n      contacts: prevState.contacts.filter((contact) => contact.id !== todoId),\n    }));\n  };\n\n  render() {\n    const { filter } = this.state;\n    const visibleContact = this.getVisibleContact();\n    return (\n      <div className={s.container}>\n        <div className={s.phonebookContainer}>\n          <h1>Phonebook</h1>\n          <ContactForm\n            addContact={this.addContact}\n            contacts={this.state.contacts}\n          />\n        </div>\n\n        <div className={s.contactsContainer}>\n          <h2>Contacts</h2>\n          <Filter value={filter} onChange={this.changeFilter} />\n          <ContactList\n            contacts={visibleContact}\n            deleteContact={this.deleteContact}\n          />\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","const reportWebVitals = (onPerfEntry) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import(\"web-vitals\").then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}